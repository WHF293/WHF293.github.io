import{_ as l,c as i,o as e,e as a}from"./app.e531ddc1.js";const f=JSON.parse('{"title":"面试题目-03","description":"","frontmatter":{},"headers":[{"level":2,"title":"滴滴","slug":"滴滴","link":"#滴滴","children":[{"level":3,"title":"一面","slug":"一面","link":"#一面","children":[]}]},{"level":2,"title":"58","slug":"_58","link":"#_58","children":[{"level":3,"title":"一面","slug":"一面-1","link":"#一面-1","children":[]},{"level":3,"title":"二面","slug":"二面","link":"#二面","children":[]},{"level":3,"title":"三面","slug":"三面","link":"#三面","children":[]}]},{"level":2,"title":"金山","slug":"金山","link":"#金山","children":[{"level":3,"title":"一面","slug":"一面-2","link":"#一面-2","children":[]},{"level":3,"title":"便利蜂","slug":"便利蜂","link":"#便利蜂","children":[]},{"level":3,"title":"一面","slug":"一面-3","link":"#一面-3","children":[]},{"level":3,"title":"二面","slug":"二面-1","link":"#二面-1","children":[]}]},{"level":2,"title":"小红书","slug":"小红书","link":"#小红书","children":[{"level":3,"title":"一面","slug":"一面-4","link":"#一面-4","children":[]},{"level":3,"title":"二面","slug":"二面-2","link":"#二面-2","children":[]}]},{"level":2,"title":"UMU","slug":"umu","link":"#umu","children":[{"level":3,"title":"一面","slug":"一面-5","link":"#一面-5","children":[]},{"level":3,"title":"二面","slug":"二面-3","link":"#二面-3","children":[]}]},{"level":2,"title":"网易","slug":"网易","link":"#网易","children":[{"level":3,"title":"一面","slug":"一面-6","link":"#一面-6","children":[]}]},{"level":2,"title":"快手","slug":"快手","link":"#快手","children":[{"level":3,"title":"一面","slug":"一面-7","link":"#一面-7","children":[]},{"level":3,"title":"二面","slug":"二面-4","link":"#二面-4","children":[]}]},{"level":2,"title":"高德","slug":"高德","link":"#高德","children":[{"level":3,"title":"一面","slug":"一面-8","link":"#一面-8","children":[]}]},{"level":2,"title":"shopee","slug":"shopee","link":"#shopee","children":[]}],"relativePath":"interview/面试题目-03.md","lastUpdated":1675826282000}'),r={name:"interview/面试题目-03.md"},h=a('<h1 id="面试题目-03" tabindex="-1">面试题目-03 <a class="header-anchor" href="#面试题目-03" aria-hidden="true">#</a></h1><h2 id="滴滴" tabindex="-1">滴滴 <a class="header-anchor" href="#滴滴" aria-hidden="true">#</a></h2><h3 id="一面" tabindex="-1">一面 <a class="header-anchor" href="#一面" aria-hidden="true">#</a></h3><ul><li>闭包是什么? 闭包的用途?</li><li>简述事件循环原理</li><li>虚拟 dom 是什么? 原理? 优缺点?</li><li>vue 和 react 在虚拟 dom 的 diff 上，做了哪些改进使得速度很快?</li><li>vue 和 react 里的 key 的作用是什么? 为什么不能用 Index？用了会怎样? 如果不加 key 会怎样?</li><li>vue 双向绑定的原理是什么?</li><li>vue 的 keep-alive 的作用是什么？怎么实现的？如何刷新的?</li><li>vue 是怎么解析 template 的? template 会变成什么?</li><li>如何解析指令? 模板变量? html 标签</li><li>用过 vue 的 render 吗? render 和 template 有什么关系</li></ul><p><strong>【代码题】</strong> 实现一个节流函数? 如果想要最后一次必须执行的话怎么实现?</p><p><strong>【代码题】</strong> 实现一个批量请求函数, 能够限制并发量?</p><h2 id="_58" tabindex="-1">58 <a class="header-anchor" href="#_58" aria-hidden="true">#</a></h2><h3 id="一面-1" tabindex="-1">一面 <a class="header-anchor" href="#一面-1" aria-hidden="true">#</a></h3><ul><li>对前端工程化的理解</li><li>前端性能优化都做了哪些工作</li><li>Nodejs 异步 IO 模型</li><li>设计模式</li><li>微前端</li><li>节流和防抖</li><li>react 有自己封装一些自定义 hooks 吗? vue 有自己封装一些指令吗</li><li>vue 向 react 迁移是怎么做的? 怎么保证兼容的</li><li>vue 的双向绑定原理</li><li>Node 的日志和负载均衡怎么做的</li><li>那前后端的分工是怎样的？哪些后端做哪些 node 做</li></ul><h3 id="二面" tabindex="-1">二面 <a class="header-anchor" href="#二面" aria-hidden="true">#</a></h3><ul><li>了解过 vue3 吗?</li><li>webscoket 的连接原理</li><li>react 生命周期</li><li>redux 原理</li><li>vue 父子组件的通信方式</li><li>async await 的原理是什么?</li><li>async/await, generator, promise 这三者的关联和区别是什么?</li></ul><h3 id="三面" tabindex="-1">三面 <a class="header-anchor" href="#三面" aria-hidden="true">#</a></h3><ul><li>虚拟列表怎么实现?</li><li>做过哪些性能优化?</li><li>...项目相关</li></ul><h2 id="金山" tabindex="-1">金山 <a class="header-anchor" href="#金山" aria-hidden="true">#</a></h2><h3 id="一面-2" tabindex="-1">一面 <a class="header-anchor" href="#一面-2" aria-hidden="true">#</a></h3><ul><li>react 和 vue 在技术层面的区别</li><li>常用的 hook 都有哪些?</li><li>用 hook 都遇到过哪些坑?</li><li>了解 useReducer 吗</li><li>组件外侧 let a 1 组件内侧点击事件更改 a，渲染的 a 会发生改变吗？如果 let a 放在组件内部，有什么变化吗？和 useState 有什么区别？</li><li>了解过 vue3 吗?</li><li>Node 是怎么部署的? pm2 守护进程的原理?</li><li>Node 开启子进程的方法有哪些?</li><li>进程间如何通信?</li><li>css 三列等宽布局如何实现? flex 1 是代表什么意思？分别有哪些属性?</li><li>前端安全都了解哪些? xss csrf <ul><li>csp 是为了解决什么问题的?</li><li>https 是如何安全通信的?</li></ul></li><li>前端性能优化做了哪些工作?</li><li>大数据列表如何设计平滑滚动和加载，下滑再上滑的操作，上下两个 buffer 区间如何变化和加载数据。</li></ul><h3 id="便利蜂" tabindex="-1">便利蜂 <a class="header-anchor" href="#便利蜂" aria-hidden="true">#</a></h3><h3 id="一面-3" tabindex="-1">一面 <a class="header-anchor" href="#一面-3" aria-hidden="true">#</a></h3><ul><li>js 中的闭包</li><li>解决过的一些线上问题</li><li>线上监控 对于 crashed 这种怎么监控? 对于内存持续增长，比如用了 15 分钟之后才会出现问题怎么监控</li><li>对于 linux 熟吗? top 命令的属性大概聊一下?</li><li>301 302 304 的区别</li></ul><h3 id="二面-1" tabindex="-1">二面 <a class="header-anchor" href="#二面-1" aria-hidden="true">#</a></h3><p><strong>【代码题】</strong> sleep 函数 <strong>【代码题】</strong> 节流防抖</p><h2 id="小红书" tabindex="-1">小红书 <a class="header-anchor" href="#小红书" aria-hidden="true">#</a></h2><h3 id="一面-4" tabindex="-1">一面 <a class="header-anchor" href="#一面-4" aria-hidden="true">#</a></h3><ul><li>async await 的原理是什么?</li><li>async/await, generator, promise 这三者的关联和区别是什么?</li><li>BFC 是什么? 哪些属性可以构成一个 BFC 呢?</li><li>postion 属性大概讲一下, static 是什么表现? static 在文档流里吗?</li><li>Webpack 的原理, plugin loader 热更新等等</li><li>Set 和 Map</li><li>vue 的 keep-alive 原理以及生命周期</li><li>vuex</li></ul><p><strong>【代码题】</strong> ES5 和 ES6 的继承? 这两种方式除了写法, 还有其他区别吗?</p><p><strong>【代码题】</strong> EventEmitter</p><h3 id="二面-2" tabindex="-1">二面 <a class="header-anchor" href="#二面-2" aria-hidden="true">#</a></h3><ul><li>浏览器从输入 url 开始发生了什么</li><li>react 生命周期</li><li>redux 的原理</li><li>vue 父子组件的通信方式</li><li>vue 的双向绑定原理</li><li>对 vue3 的了解? vue3 是怎么做的双向绑定?</li></ul><p><strong>【代码题】</strong> 使用 Promise 实现一个异步流量控制的函数, 比如一共 10 个请求, 每个请求的快慢不同, 最多同时 3 个请求发出, 快的一个请求返回后, 就从剩下的 7 个请求里再找一个放进请求池里, 如此循环。</p><h2 id="umu" tabindex="-1">UMU <a class="header-anchor" href="#umu" aria-hidden="true">#</a></h2><h3 id="一面-5" tabindex="-1">一面 <a class="header-anchor" href="#一面-5" aria-hidden="true">#</a></h3><ul><li>node.js 如何调试</li><li>charles map local/map remote</li><li>chrome devtool 如何查看内存情况</li></ul><h3 id="二面-3" tabindex="-1">二面 <a class="header-anchor" href="#二面-3" aria-hidden="true">#</a></h3><ul><li>koa 洋葱模型</li><li>中间件的异常处理是怎么做的？</li><li>在没有 async await 的时候, koa 是怎么实现的洋葱模型?</li><li>body-parser 中间件了解过吗</li><li>如果浏览器端用 post 接口上传图片和一些其他字段, header 里会有什么? koa 里如果不用 body-parser，应该怎么解析?</li><li>webscoket 的连接原理</li><li>https 是如何保证安全的? 是如何保证不被中间人攻击的?</li></ul><h2 id="网易" tabindex="-1">网易 <a class="header-anchor" href="#网易" aria-hidden="true">#</a></h2><h3 id="一面-6" tabindex="-1">一面 <a class="header-anchor" href="#一面-6" aria-hidden="true">#</a></h3><ul><li>你觉得 js 里 this 的设计怎么样? 有没有什么缺点啥的</li><li>vue 的响应式开发比命令式有什么好处</li><li>装饰器</li><li>vuex</li><li>generator 是如何做到中断和恢复的</li><li>function 和 箭头函数的定义有什么区别? 导致了在 this 指向这块表现不同</li><li>导致 js 里 this 指向混乱的原因是什么?</li><li>浏览器的事件循环</li><li>宏任务和微任务的区分是为了做什么? 优先级?</li></ul><p><strong>【代码题】</strong> 实现 compose 函数, 类似于 koa 的中间件洋葱模型</p><h2 id="快手" tabindex="-1">快手 <a class="header-anchor" href="#快手" aria-hidden="true">#</a></h2><h3 id="一面-7" tabindex="-1">一面 <a class="header-anchor" href="#一面-7" aria-hidden="true">#</a></h3><ul><li>小程序的架构? 双线程分别做的什么事情?</li><li>为什么小程序里拿不到 dom 相关的 api</li></ul><h3 id="二面-4" tabindex="-1">二面 <a class="header-anchor" href="#二面-4" aria-hidden="true">#</a></h3><ul><li>Promise then 第二个参数和 catch 的区别是什么?</li><li>Promise finally 怎么实现的</li><li>作用域链</li><li>Electron 架构</li><li>微前端</li><li>webpack5 模块联邦</li><li>Webworker</li></ul><h2 id="高德" tabindex="-1">高德 <a class="header-anchor" href="#高德" aria-hidden="true">#</a></h2><h3 id="一面-8" tabindex="-1">一面 <a class="header-anchor" href="#一面-8" aria-hidden="true">#</a></h3><ul><li>Symbol</li><li>useRef / ref / forwardsRef 的区别是什么?</li><li>useEffect 的第二个参数, 传空数组和传依赖数组有什么区别? <ul><li>如果 return 了一个函数, 传空数组的话是在什么时候执行? 传依赖数组的时候是在什么时候执行?</li></ul></li><li>flex 布局</li><li>ES5 继承</li><li>ES6 继承, 静态方法/属性和实例方法/属性 是什么时候挂载的</li><li>Promise 各种 api</li><li>各种 css 属性</li></ul><h2 id="shopee" tabindex="-1">shopee <a class="header-anchor" href="#shopee" aria-hidden="true">#</a></h2>',47),t=[h];function d(n,s,u,c,o,p){return e(),i("div",null,t)}const g=l(r,[["render",d]]);export{f as __pageData,g as default};
