import{_ as s,c as a,o as n,e as l}from"./app.e531ddc1.js";const A=JSON.parse('{"title":"林三心面试视频记录 - 2022-06-05","description":"","frontmatter":{"title":"林三心面试视频记录 - 2022-06-05","desc":"以下出现的问题均取自 B 站林三心面试视频集，问题详解取自各平台对应内容的博客（地址已附上，侵删），具体使用以及详细说明可以看对应博客"},"headers":[{"level":2,"title":"DOMContentLoaded 、 onload 是啥？这两的区别？","slug":"domcontentloaded-、-onload-是啥-这两的区别","link":"#domcontentloaded-、-onload-是啥-这两的区别","children":[]},{"level":2,"title":"什么是 doucmentFragFrame （文档碎片）？","slug":"什么是-doucmentfragframe-文档碎片","link":"#什么是-doucmentfragframe-文档碎片","children":[]},{"level":2,"title":"说一下浏览器额回流重绘","slug":"说一下浏览器额回流重绘","link":"#说一下浏览器额回流重绘","children":[]},{"level":2,"title":"说一下 getBoundinfClientRect 作用？","slug":"说一下-getboundinfclientrect-作用","link":"#说一下-getboundinfclientrect-作用","children":[]},{"level":2,"title":"说一下图片懒加载，以及你对 intersectionObserver 这个 api 的理解","slug":"说一下图片懒加载-以及你对-intersectionobserver-这个-api-的理解","link":"#说一下图片懒加载-以及你对-intersectionobserver-这个-api-的理解","children":[]},{"level":2,"title":"mutaionobserver 是啥？有什么作用？","slug":"mutaionobserver-是啥-有什么作用","link":"#mutaionobserver-是啥-有什么作用","children":[]},{"level":2,"title":"vue 的 dep 和 watcher 为什么要互相收集？","slug":"vue-的-dep-和-watcher-为什么要互相收集","link":"#vue-的-dep-和-watcher-为什么要互相收集","children":[]},{"level":2,"title":"new Vue() 的时候发生了什么？","slug":"new-vue-的时候发生了什么","link":"#new-vue-的时候发生了什么","children":[]},{"level":2,"title":"箭头函数为什么不能作为构造函数？","slug":"箭头函数为什么不能作为构造函数","link":"#箭头函数为什么不能作为构造函数","children":[]},{"level":2,"title":"promise 的 then 方法为什么可以链式调用？","slug":"promise-的-then-方法为什么可以链式调用","link":"#promise-的-then-方法为什么可以链式调用","children":[]},{"level":2,"title":"场景题：promise 封装一个 http 请求， 怎么实现请求超时？","slug":"场景题-promise-封装一个-http-请求-怎么实现请求超时","link":"#场景题-promise-封装一个-http-请求-怎么实现请求超时","children":[]},{"level":2,"title":"promise.all 和 promise.race 区别？","slug":"promise-all-和-promise-race-区别","link":"#promise-all-和-promise-race-区别","children":[]},{"level":2,"title":"promise.allSettled 是啥？解决了 promise.all 的什么问题?","slug":"promise-allsettled-是啥-解决了-promise-all-的什么问题","link":"#promise-allsettled-是啥-解决了-promise-all-的什么问题","children":[]},{"level":2,"title":"async await 和 定时器的执行顺序？","slug":"async-await-和-定时器的执行顺序","link":"#async-await-和-定时器的执行顺序","children":[{"level":3,"title":"promise 手写实现","slug":"promise-手写实现","link":"#promise-手写实现","children":[]},{"level":3,"title":"async await 手写实现","slug":"async-await-手写实现","link":"#async-await-手写实现","children":[]},{"level":3,"title":"性能优化","slug":"性能优化","link":"#性能优化","children":[]},{"level":3,"title":"axios 怎么取消重复请求？","slug":"axios-怎么取消重复请求","link":"#axios-怎么取消重复请求","children":[]},{"level":3,"title":"cookie 和 localStorage 、 sessionStorage 区别？","slug":"cookie-和-localstorage-、-sessionstorage-区别","link":"#cookie-和-localstorage-、-sessionstorage-区别","children":[]}]},{"level":2,"title":"html5 语义化的好处","slug":"html5-语义化的好处","link":"#html5-语义化的好处","children":[]},{"level":2,"title":"css3 毛玻璃效果的实现","slug":"css3-毛玻璃效果的实现","link":"#css3-毛玻璃效果的实现","children":[]},{"level":2,"title":"css2 的 :first-child 和 css3 的 :first-of-type 的区别？","slug":"css2-的-first-child-和-css3-的-first-of-type-的区别","link":"#css2-的-first-child-和-css3-的-first-of-type-的区别","children":[]},{"level":2,"title":"https 比 http 安全在哪里","slug":"https-比-http-安全在哪里","link":"#https-比-http-安全在哪里","children":[]},{"level":2,"title":"快速排序和冒泡排序实现，以及相应的时间复杂度","slug":"快速排序和冒泡排序实现-以及相应的时间复杂度","link":"#快速排序和冒泡排序实现-以及相应的时间复杂度","children":[]},{"level":2,"title":"vue 中 的 v-model 可以用什么替代","slug":"vue-中-的-v-model-可以用什么替代","link":"#vue-中-的-v-model-可以用什么替代","children":[]},{"level":2,"title":"vue 销毁时，所以自定义事件和原生时间都会跟着解绑吗","slug":"vue-销毁时-所以自定义事件和原生时间都会跟着解绑吗","link":"#vue-销毁时-所以自定义事件和原生时间都会跟着解绑吗","children":[]},{"level":2,"title":"vue3 怎么解决 vue2 的响应式缺陷的","slug":"vue3-怎么解决-vue2-的响应式缺陷的","link":"#vue3-怎么解决-vue2-的响应式缺陷的","children":[]},{"level":2,"title":"nextTick 是什么任务？为什么优先是微任务","slug":"nexttick-是什么任务-为什么优先是微任务","link":"#nexttick-是什么任务-为什么优先是微任务","children":[]},{"level":2,"title":"一个超长的字符串能存在栈内存里面吗","slug":"一个超长的字符串能存在栈内存里面吗","link":"#一个超长的字符串能存在栈内存里面吗","children":[]},{"level":2,"title":"赋值、浅拷贝、深拷贝的区别","slug":"赋值、浅拷贝、深拷贝的区别","link":"#赋值、浅拷贝、深拷贝的区别","children":[]},{"level":2,"title":"webpack style-loader 和 css-loader 区别","slug":"webpack-style-loader-和-css-loader-区别","link":"#webpack-style-loader-和-css-loader-区别","children":[]},{"level":2,"title":"webpack 怎么配置 ts 打包","slug":"webpack-怎么配置-ts-打包","link":"#webpack-怎么配置-ts-打包","children":[]},{"level":2,"title":"webpack 3 中 hash 值配置的区别","slug":"webpack-3-中-hash-值配置的区别","link":"#webpack-3-中-hash-值配置的区别","children":[]},{"level":2,"title":"强缓存和协商缓存的区别","slug":"强缓存和协商缓存的区别","link":"#强缓存和协商缓存的区别","children":[]},{"level":2,"title":"如何计算白屏时间","slug":"如何计算白屏时间","link":"#如何计算白屏时间","children":[]},{"level":2,"title":"本地服务代理为什么能解决跨域问题？其他的跨域解决方案","slug":"本地服务代理为什么能解决跨域问题-其他的跨域解决方案","link":"#本地服务代理为什么能解决跨域问题-其他的跨域解决方案","children":[]},{"level":2,"title":"indexOf 的不足，以及和 includes 的区别","slug":"indexof-的不足-以及和-includes-的区别","link":"#indexof-的不足-以及和-includes-的区别","children":[]},{"level":2,"title":"vue 数据多层级传递(跨越多级组件)","slug":"vue-数据多层级传递-跨越多级组件","link":"#vue-数据多层级传递-跨越多级组件","children":[]},{"level":2,"title":"vite 很快，为什么，大致的原理？","slug":"vite-很快-为什么-大致的原理","link":"#vite-很快-为什么-大致的原理","children":[]},{"level":2,"title":"vuex 怎么实现将数据注入到每一个组件里","slug":"vuex-怎么实现将数据注入到每一个组件里","link":"#vuex-怎么实现将数据注入到每一个组件里","children":[]},{"level":2,"title":"axios 如何区分浏览器环境和 node 环境","slug":"axios-如何区分浏览器环境和-node-环境","link":"#axios-如何区分浏览器环境和-node-环境","children":[]},{"level":2,"title":"网站实现换肤的方式","slug":"网站实现换肤的方式","link":"#网站实现换肤的方式","children":[]},{"level":2,"title":"i18n 实现原理","slug":"i18n-实现原理","link":"#i18n-实现原理","children":[]},{"level":2,"title":"说一下 TKD","slug":"说一下-tkd","link":"#说一下-tkd","children":[]}],"relativePath":"interview/林三心-模拟面试-01.md","lastUpdated":1675774867000}'),p={name:"interview/林三心-模拟面试-01.md"},o=l(`<h1 id="案例一" tabindex="-1">案例一： <a class="header-anchor" href="#案例一" aria-hidden="true">#</a></h1><h2 id="domcontentloaded-、-onload-是啥-这两的区别" tabindex="-1">DOMContentLoaded 、 onload 是啥？这两的区别？ <a class="header-anchor" href="#domcontentloaded-、-onload-是啥-这两的区别" aria-hidden="true">#</a></h2><ul><li><a href="https://www.jianshu.com/p/1a8a7e698447" target="_blank" rel="noreferrer">window.onload 和 DOMContentLoaded 的区别</a></li></ul><ul><li><p>DOMContentLoaded 和 onload 介绍</p><p><code>DOMContentLoaded</code> 方法是在 HTML 文档被完全的加载和解析之后才会触发的事件，他并不需要等到（css/image 等）加载完成之后再进行。</p><p><code>load</code> 事件（onload 事件），用于检测一个加载完全的页面，即页面全部资源都加载完毕之后。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">测试</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">	&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">观察脚本加载的顺序</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">load</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">load事件回调</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">		)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DOMContentLoaded</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 不兼容老的浏览器</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DOMContentLoaded回调</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">		)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li></ul><h2 id="什么是-doucmentfragframe-文档碎片" tabindex="-1">什么是 doucmentFragFrame （文档碎片）？ <a class="header-anchor" href="#什么是-doucmentfragframe-文档碎片" aria-hidden="true">#</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/408738417" target="_blank" rel="noreferrer">性能优化之文档碎片</a></li></ul><ul><li><p>概念</p><p>一般情况下，在操作 DOM 结构的时候,经常会说非常消耗性能，原因是我们向 DOM 中添加新的元素，DOM 会立刻更新。</p><p>也就是添加一次更新一次，如果添加 100 个节点，那么就得更新 100 次，很浪费资源呀</p><p>每次操作 DOM 节点插入时，浏览器会触发重排重绘，为了提高效率，要尽可能的减少重排重绘，即应该减少 DOM 节点的插入。有一种方法就是利用文档碎片去做。</p><p><code>文档碎片是一种虚拟的DOM节点，存在于内存中，跟实际的DOM节点之间没有关系</code></p><p>当我们需要给一个节点中插入多个子节点的时候，完全可以将多个子节点先插入到文档碎片中，所有子节点都放到文档碎片中后，</p><p>再将文档碎片插入到实际的节点中，这样就减少了很多节点直接插入到父节点中的次数了，</p><p>也就是本来多次触发重排重绘的操作，有了文档碎片中，只需要触发一次重排重绘了。</p><p><code>对于文档碎片的插入操作，跟实际的DOM节点操作是一样的。</code></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 案例： --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">&lt;!-- 这里插入多条 li 标签 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> list </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 直接添加，会发生多次重排重绘</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10000</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">p</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">li</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerText</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">oDiv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">p</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#A6ACCD;">(oDiv)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 用一个标签包裹，发生一次重排重绘，但多了一个多余的标签</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> oDiv </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10000</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">p</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">li</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerText</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">oDiv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">p</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#A6ACCD;">(oDiv)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 使用文档碎片，发生一次重排重绘，无多余标签</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createDocumentFragment</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10000</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">p</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">li</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerText</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">p</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#A6ACCD;">(doc)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>提示：<code>可以对比 react 提供的 &#39;&lt;&gt;&lt;/&gt;&#39; 标签 或者 vue 的 ‘&lt;template&gt;&lt;/template&gt;’ 标签</code></p></li></ul><h2 id="说一下浏览器额回流重绘" tabindex="-1">说一下浏览器额回流重绘 <a class="header-anchor" href="#说一下浏览器额回流重绘" aria-hidden="true">#</a></h2><ul><li><p><a href="https://zhuanlan.zhihu.com/p/148825597" target="_blank" rel="noreferrer">深入理解浏览器的重绘与重排</a></p></li><li><p>什么是重排和重绘</p><p>浏览器下载完页面中的所有组件 —— HTML 标记、JavaScript、CSS、图片之后会解析生成两个内部数据结构 —— <code>DOM树</code> 和 <code>渲染树</code>。</p><p>DOM 树 中的每一个需要显示的节点在 渲染树 种至少存在一个对应的节点, 一旦 DOM 和渲染树 构建完成，浏览器就开始显示（绘制）页面元素。</p><p><code>当 DOM 的变化影响了元素的几何属性（宽或高）</code>，浏览器需要重新计算元素的几何属性，同样其他元素的几何属性和位置也会因此受到影响。</p><p><code>浏览器会使渲染树中受到影响的部分失效，并重新构造渲染树。这个过程称为重排。</code></p><p><code>完成重排后，浏览器会重新绘制受影响的部分到屏幕，该过程称为重绘。</code></p></li><li><p>重排发生条件</p><ul><li>添加或者删除可见的 DOM 元素</li><li>元素位置改变</li><li>元素尺寸改变</li><li>元素内容改变（例如：一个文本被另一个不同尺寸的图片替代）</li><li>页面渲染初始化（这个无法避免）</li><li>浏览器窗口尺寸改变</li></ul><p>【备注】：</p><ol><li>大多数浏览器通过队列化修改并批量执行来优化重排过程，合并短时间内的多次 dom 操作，避免多次重排重绘，但对于手动获取/修改布局信息的操作会重新刷新队列，即立即执行重排重绘</li><li>重排一定会发生重绘，重绘不一定会触发重排</li></ol></li></ul><ul><li><p>重排和重绘是 DOM 编程中耗能的主要原因之一，平时涉及 DOM 编程时可以参考以下几点：</p><ul><li>尽量不要在布局信息改变时做查询（会导致渲染队列强制刷新）</li><li>同一个 DOM 的多个属性改变可以写在一起（减少 DOM 访问，同时把强制渲染队列刷新的风险降为 0）</li><li>如果要批量添加 DOM，可以<code>先让元素脱离文档流，操作完后再带入文档流</code>，这样只会触发一次重排（fragment 元素的应用）</li><li>将需要多次重排的元素，<code>position 属性设为 absolute 或 fixed，这样此元素就脱离了文档流，它的变化不会影响到其他元素</code>。例如有动画效果的元素就最好设置为绝对定位。</li></ul></li></ul><h2 id="说一下-getboundinfclientrect-作用" tabindex="-1">说一下 getBoundinfClientRect 作用？ <a class="header-anchor" href="#说一下-getboundinfclientrect-作用" aria-hidden="true">#</a></h2><ul><li><p><a href="https://juejin.cn/post/7046586981601509390" target="_blank" rel="noreferrer">getBoundingClientRect() 详解</a></p></li><li><p><a href="https://juejin.cn/post/6938641878866722824" target="_blank" rel="noreferrer">getClientRects 和 getBoundingClientRect</a></p></li><li><p><a href="https://juejin.cn/post/6925003338085826568" target="_blank" rel="noreferrer">js 实现图片的懒加载</a></p></li><li><p><code>getBoundinfClientRect</code> 介绍：</p><p>返回一个 DOMRect 对象，这个对象是由该元素的 getClientRects()方法返回的一组矩形的集合，就是该元素的 CSS 边框大小。返回的结果是包含完整元素的最小矩形，并且拥有 <code>left, top, right, bottom, x, y, width, 和 height</code> 这几个以<code>像素</code>为单位的 <code>只读属性</code> 用于描述整个边框</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 基本使用 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#B2CCD6;">padding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">400px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">ccc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">child</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">ccc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">child</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">child</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> childDom </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.child</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(childDom</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBoundingClientRect</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// --- 相对于视口左上角的位置，均是 numer ---</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// top: 100     --- 盒子上边框距离视口顶部的距离</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// bottom: 302  --- 盒子底边框距离视口顶部的距离 = top + height</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// left: 394    --- 盒子左边框距离视口左侧的距离</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// right: 796   --- 盒子右边框距离视口左侧的距离 = left + width</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// x: 394       --- 盒子左上角相对于视口左侧的距离</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// y: 100       --- 盒子左上角相对于视口顶部的距离</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// 盒子的宽高</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// width: 402</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// height: 202</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 图片懒加载案例 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./pic/1.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./pic/2.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./pic/3.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./pic/4.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./pic/5.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./pic/6.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> imgs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// 节流函数,定时器版本</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">throttle</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">wait</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(...</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#82AAFF;">func</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">					</span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">wait</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">//方法1： H + S &gt; offsetTop, 不推荐</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">lazyLoad1</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">imgs</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;font-style:italic;">//offsetTop是元素与offsetParent的距离，循环获取直到页面顶部</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getTop</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">T</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offsetTop</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> ((</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offsetParent</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#A6ACCD;">T</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offsetTop</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">H</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">documentElement</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientHeight</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//获取可视区域高度</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">documentElement</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">imgs</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">img</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#676E95;font-style:italic;">// +100 提前100个像素就开始加载</span></span>
<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#676E95;font-style:italic;">// 并且只处理没有src即没有加载过的图片</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">H</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getTop</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">img</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> throttleLazyLoad1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">throttle</span><span style="color:#A6ACCD;">(lazyLoad1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// 方法2：el.getBoundingClientRect().top &lt;= window.innerHeight</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">lazyLoad2</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">imgs</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">isIn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">el</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bound</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBoundingClientRect</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">clientHeight</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHeight</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 浏览器单钱可视区域的高度</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bound</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">clientHeight</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">imgs</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">img</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isIn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">img</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> throttleLazyLoad2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">throttle</span><span style="color:#A6ACCD;">(lazyLoad2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>【备注】：使用 <code>getBoundinfClientRect</code> 方法虽然能够实现图片懒加载，但需要自己手动去计算，并且会引起回流与重绘，性能相对来说较差，建议使用 <code>intersectionObserver</code> 实现</p></li></ul><h2 id="说一下图片懒加载-以及你对-intersectionobserver-这个-api-的理解" tabindex="-1">说一下图片懒加载，以及你对 intersectionObserver 这个 api 的理解 <a class="header-anchor" href="#说一下图片懒加载-以及你对-intersectionobserver-这个-api-的理解" aria-hidden="true">#</a></h2><ul><li><p><a href="https://juejin.cn/post/7100739752982216734" target="_blank" rel="noreferrer">从图片懒加载来看 IntersectionObserver</a></p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver" target="_blank" rel="noreferrer">MDN —— Intersection Observer</a></p></li><li><p>图片懒加载原理</p><p>就是判断元素是否进入了可视区，进入了可视区就去请求对应的图片，否则就显示一张兜底的占位图。</p></li><li><p>IntersectionObserver 介绍</p><p><code>IntersectionObserver</code> 是一个新的 API，可以<code>自动&quot;观察&quot;元素是否可见</code>，Chrome 51+ 已经支持。由于可见（visible）的本质是，<code>目标元素与视口产生一个交叉区，所以这个 API 叫做&quot;交叉观察器&quot;</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> observer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">IntersectionObserver</span><span style="color:#A6ACCD;">(callback[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options])</span></span>
<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img_list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img_box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./default.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./1.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img_box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./default.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./2.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img_box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./default.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./3.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img_box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./default.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./4.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// 图片懒加载实现</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">lazyLoadWithObserver</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">imgs</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.img_box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;font-style:italic;">// 推荐使用IntersectionObserver</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">observer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">IntersectionObserver</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">entries</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">observe</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#A6ACCD;">entries</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">				</span><span style="color:#676E95;font-style:italic;">// 获取当前正在观察的元素</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isIntersecting</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">					</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 删除data-src属性</span></span>
<span class="line"><span style="color:#F07178;">					</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeAttribute</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data-src</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 取消观察</span></span>
<span class="line"><span style="color:#F07178;">					</span><span style="color:#A6ACCD;">observe</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unobserve</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">imgs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#676E95;font-style:italic;">// 遍历观察元素</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#A6ACCD;">observer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">observe</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">lazyLoadWithObserver</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li><li><p>IntersectionObserver 搭配 vue 的自定义指令</p><p>原理： 利用 <code>img</code> 标签的 <code>loading</code> 属性</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// v-lazy.js</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">install</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Vue</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defaultSrc</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/default.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lazyLoad</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">binding</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defaultSrc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">observer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">IntersectionObserver</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">entries</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">observe</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#A6ACCD;">entries</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">					</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">					</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isIntersection</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">						</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">binding</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">						</span><span style="color:#A6ACCD;">observe</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unobserve</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 取消观察</span></span>
<span class="line"><span style="color:#F07178;">					</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#A6ACCD;">observer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unobserve</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">directive</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lazy</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			inserted</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lazyLoad</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">			updated</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lazyLoad</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// main.js</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> App </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./App.vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> vLazy </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./utils/v-lazy</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(vLazy)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 注册懒加载指令</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">render</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">h</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">h</span><span style="color:#A6ACCD;">(App)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$mount</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img_list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-lazy</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">item.img</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">item in imgList</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">item.id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			imgList</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">freeze</span><span style="color:#F07178;">([</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> img</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./images/1.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> img</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./images/2.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> img</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./images/3.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> img</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./images/4 .png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">			])</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li></ul><h2 id="mutaionobserver-是啥-有什么作用" tabindex="-1">mutaionobserver 是啥？有什么作用？ <a class="header-anchor" href="#mutaionobserver-是啥-有什么作用" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/7064557881492209678" target="_blank" rel="noreferrer">浏览器的 5 种 Observer，你用过几种？</a></li><li><a href="https://juejin.cn/post/7036733000565915655" target="_blank" rel="noreferrer">DOM 规范 —— MutationObserver 接口</a></li><li><a href="https://juejin.cn/post/7016956024561074213" target="_blank" rel="noreferrer">MutationObserver 用法总结( 监听 DOM 变化 )</a></li></ul><p>浏览器提供的 5 种 Observer:</p><p><code>MutationObserver、IntersectionObserver、PerformanceObserver、ResizeObserver、ReportingObserver</code></p><ul><li><code>MutationObserver</code>：监听对元素的属性的修改、对它的子节点的增删改（比如文章水印被人通过 devtools 去掉了，那么就可以通过 MutationObserver 监听这个变化，然后重新加上，让水印去不掉）</li><li><code>IntersectionObserver</code>：监听一个元素从不可见到可见，从可见到不可见 （通用用于图片懒加载）</li><li><code>PerformanceObserver</code>：用于监听记录 performance 数据的行为，一旦记录了就会触发回调</li><li><code>ResizeObserver</code>：监听<code>元素</code>大小的改变，当 width、height 被修改时会触发回调 (对应监听窗口大小的 resize 事件)</li><li><code>ReportingObserver</code>：ReportingObserver 可以监听过时的 api、浏览器干预等报告等的打印，在回调里上报，这些是错误监听无法监听到但对了解网页运行情况很有用的数据。</li></ul><h2 id="vue-的-dep-和-watcher-为什么要互相收集" tabindex="-1">vue 的 dep 和 watcher 为什么要互相收集？ <a class="header-anchor" href="#vue-的-dep-和-watcher-为什么要互相收集" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/6995079895470571551" target="_blank" rel="noreferrer">vue 源码分析之 watcher 为何收集 dep？</a></li><li><a href="https://juejin.cn/post/6844904050966659085" target="_blank" rel="noreferrer">理清 Vue 响应式系统中的 Watcher 和 Dep 的关系</a></li></ul><p>vue 在渲染的时候有一个<code>依赖收集</code>的过程，data 属性对应的 dep,会收集 watcher,同时 watcher 也会收集 dep。</p><p><code>dep 收集 watcher 的原因是为了属性值更改的时候，通过 dep 通知 watcher 更新</code></p><h2 id="new-vue-的时候发生了什么" tabindex="-1">new Vue() 的时候发生了什么？ <a class="header-anchor" href="#new-vue-的时候发生了什么" aria-hidden="true">#</a></h2><h2 id="箭头函数为什么不能作为构造函数" tabindex="-1">箭头函数为什么不能作为构造函数？ <a class="header-anchor" href="#箭头函数为什么不能作为构造函数" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/7050476297318825992" target="_blank" rel="noreferrer">Day07 - 为什么箭头函数不能当构造函数 | 面试 365</a></li></ul><h2 id="promise-的-then-方法为什么可以链式调用" tabindex="-1">promise 的 then 方法为什么可以链式调用？ <a class="header-anchor" href="#promise-的-then-方法为什么可以链式调用" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/6883121706123132936" target="_blank" rel="noreferrer">Promise.then 是如何实现链式调用的</a></li></ul><h2 id="场景题-promise-封装一个-http-请求-怎么实现请求超时" tabindex="-1">场景题：promise 封装一个 http 请求， 怎么实现请求超时？ <a class="header-anchor" href="#场景题-promise-封装一个-http-请求-怎么实现请求超时" aria-hidden="true">#</a></h2><ul><li><a href="https://blog.csdn.net/qq_43624878/article/details/115265504" target="_blank" rel="noreferrer">利用 promise 实现一个超时请求处理</a></li></ul><h2 id="promise-all-和-promise-race-区别" tabindex="-1">promise.all 和 promise.race 区别？ <a class="header-anchor" href="#promise-all-和-promise-race-区别" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/6962019510526148615" target="_blank" rel="noreferrer">理解和手写 Promise.all 和 Promise.race</a></li></ul><h2 id="promise-allsettled-是啥-解决了-promise-all-的什么问题" tabindex="-1">promise.allSettled 是啥？解决了 promise.all 的什么问题? <a class="header-anchor" href="#promise-allsettled-是啥-解决了-promise-all-的什么问题" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/6855129005792854029" target="_blank" rel="noreferrer">Promise.all 和 Promise.allSettled 的区别</a></li></ul><h2 id="async-await-和-定时器的执行顺序" tabindex="-1">async await 和 定时器的执行顺序？ <a class="header-anchor" href="#async-await-和-定时器的执行顺序" aria-hidden="true">#</a></h2><h3 id="promise-手写实现" tabindex="-1">promise 手写实现 <a class="header-anchor" href="#promise-手写实现" aria-hidden="true">#</a></h3><h3 id="async-await-手写实现" tabindex="-1">async await 手写实现 <a class="header-anchor" href="#async-await-手写实现" aria-hidden="true">#</a></h3><h3 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-hidden="true">#</a></h3><ul><li>按钮： 防抖</li><li>图片懒加载： 上面已经介绍过了</li><li>vue 路由懒加载</li></ul><h3 id="axios-怎么取消重复请求" tabindex="-1">axios 怎么取消重复请求？ <a class="header-anchor" href="#axios-怎么取消重复请求" aria-hidden="true">#</a></h3><p>利用 axios 的请求/响应拦截器</p><ul><li><a href="https://juejin.cn/post/6992083732253376549" target="_blank" rel="noreferrer">axios 请求封装（取消重复请求）</a></li></ul><h3 id="cookie-和-localstorage-、-sessionstorage-区别" tabindex="-1">cookie 和 localStorage 、 sessionStorage 区别？ <a class="header-anchor" href="#cookie-和-localstorage-、-sessionstorage-区别" aria-hidden="true">#</a></h3><h1 id="案例二" tabindex="-1">案例二： <a class="header-anchor" href="#案例二" aria-hidden="true">#</a></h1><h2 id="html5-语义化的好处" tabindex="-1">html5 语义化的好处 <a class="header-anchor" href="#html5-语义化的好处" aria-hidden="true">#</a></h2><h2 id="css3-毛玻璃效果的实现" tabindex="-1">css3 毛玻璃效果的实现 <a class="header-anchor" href="#css3-毛玻璃效果的实现" aria-hidden="true">#</a></h2><h2 id="css2-的-first-child-和-css3-的-first-of-type-的区别" tabindex="-1">css2 的 :first-child 和 css3 的 :first-of-type 的区别？ <a class="header-anchor" href="#css2-的-first-child-和-css3-的-first-of-type-的区别" aria-hidden="true">#</a></h2><ul><li><p><a href="https://www.cnblogs.com/2050/p/3569509.html" target="_blank" rel="noreferrer">css 选择器中:first-child 与:first-of-type 的区别</a></p></li><li><p>区别:</p><ul><li><code>:first-child</code>, 匹配元素是否是其父元素的第一个子元素</li><li><code>:first-of-type</code>， 匹配该父元素下，该元素在同类型元素是否是第一个元素</li></ul></li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">div</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">p</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-child</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">/* 匹配成功 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">h1</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-child</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">/* 匹配失败 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">p</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-of-type</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">/* 匹配成功 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">h1</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-of-type</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">/* 匹配成功 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>【备注】： 同样类型的选择器 <code>:last-child 和 :last-of-type、:nth-child(n) 和 :nth-of-type(n)</code> 也可以这样去理解。</p><h2 id="https-比-http-安全在哪里" tabindex="-1">https 比 http 安全在哪里 <a class="header-anchor" href="#https-比-http-安全在哪里" aria-hidden="true">#</a></h2><ul><li><p><a href="https://juejin.cn/post/6844903830987997197" target="_blank" rel="noreferrer">为什么 HTTPS 比 HTTP 更安全？</a></p></li><li><p>概念</p><ul><li>http： 超文本传输协议，是互联网上应用最为广泛的一种网络协议</li><li>https: 是以安全为目标的 http 通道，即 http 下加入 ssl 层</li></ul><blockquote><p>简单来说 https 协议是由 http 和 ssl 协议构建的可进行加密传输和身份认证的网络协议</p></blockquote></li></ul><h2 id="快速排序和冒泡排序实现-以及相应的时间复杂度" tabindex="-1">快速排序和冒泡排序实现，以及相应的时间复杂度 <a class="header-anchor" href="#快速排序和冒泡排序实现-以及相应的时间复杂度" aria-hidden="true">#</a></h2><h2 id="vue-中-的-v-model-可以用什么替代" tabindex="-1">vue 中 的 v-model 可以用什么替代 <a class="header-anchor" href="#vue-中-的-v-model-可以用什么替代" aria-hidden="true">#</a></h2><ul><li><a href="https://blog.csdn.net/weixin_45389051/article/details/104704627" target="_blank" rel="noreferrer">代码解释 v-model 可以用两个指令结合代替 </a></li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@input</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message = $event.target.value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="vue-销毁时-所以自定义事件和原生时间都会跟着解绑吗" tabindex="-1">vue 销毁时，所以自定义事件和原生时间都会跟着解绑吗 <a class="header-anchor" href="#vue-销毁时-所以自定义事件和原生时间都会跟着解绑吗" aria-hidden="true">#</a></h2><ul><li><a href="https://segmentfault.com/q/1010000016613680/" target="_blank" rel="noreferrer">vue 组件的事件是否有必要在组件销毁前进行移除？</a></li></ul><h2 id="vue3-怎么解决-vue2-的响应式缺陷的" tabindex="-1">vue3 怎么解决 vue2 的响应式缺陷的 <a class="header-anchor" href="#vue3-怎么解决-vue2-的响应式缺陷的" aria-hidden="true">#</a></h2><ul><li><a href="https://blog.csdn.net/weixin_54182512/article/details/121349580" target="_blank" rel="noreferrer">Vue3 解决了 vue2 的什么问题</a></li></ul><h2 id="nexttick-是什么任务-为什么优先是微任务" tabindex="-1">nextTick 是什么任务？为什么优先是微任务 <a class="header-anchor" href="#nexttick-是什么任务-为什么优先是微任务" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/6875492931726376974" target="_blank" rel="noreferrer">Vue 的 nextTick 具体是微任务还是宏任务?</a></li></ul><h2 id="一个超长的字符串能存在栈内存里面吗" tabindex="-1">一个超长的字符串能存在栈内存里面吗 <a class="header-anchor" href="#一个超长的字符串能存在栈内存里面吗" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/7054195221239693342" target="_blank" rel="noreferrer">栈内存只有 984KiB，如果一个字符串超级长，能存的下吗</a></li></ul><h2 id="赋值、浅拷贝、深拷贝的区别" tabindex="-1">赋值、浅拷贝、深拷贝的区别 <a class="header-anchor" href="#赋值、浅拷贝、深拷贝的区别" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/6844904100061003783" target="_blank" rel="noreferrer">赋值、浅拷贝、深拷贝区别</a></li></ul><h2 id="webpack-style-loader-和-css-loader-区别" tabindex="-1">webpack style-loader 和 css-loader 区别 <a class="header-anchor" href="#webpack-style-loader-和-css-loader-区别" aria-hidden="true">#</a></h2><h2 id="webpack-怎么配置-ts-打包" tabindex="-1">webpack 怎么配置 ts 打包 <a class="header-anchor" href="#webpack-怎么配置-ts-打包" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/7028532437458092068" target="_blank" rel="noreferrer">Webpack5 系列（九）：TS 打包配置</a></li></ul><h2 id="webpack-3-中-hash-值配置的区别" tabindex="-1">webpack 3 中 hash 值配置的区别 <a class="header-anchor" href="#webpack-3-中-hash-值配置的区别" aria-hidden="true">#</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/416294253" target="_blank" rel="noreferrer">webpack 中 hash，chunkhash，contenthash 有什么区别</a></li></ul><h2 id="强缓存和协商缓存的区别" tabindex="-1">强缓存和协商缓存的区别 <a class="header-anchor" href="#强缓存和协商缓存的区别" aria-hidden="true">#</a></h2><ul><li><a href="https://www.jianshu.com/p/1a1536ab01f1" target="_blank" rel="noreferrer">强缓存和协商缓存的区别</a></li></ul><h2 id="如何计算白屏时间" tabindex="-1">如何计算白屏时间 <a class="header-anchor" href="#如何计算白屏时间" aria-hidden="true">#</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/344120636" target="_blank" rel="noreferrer">前端性能指标：白屏和首屏时间的计算</a></li></ul><h2 id="本地服务代理为什么能解决跨域问题-其他的跨域解决方案" tabindex="-1">本地服务代理为什么能解决跨域问题？其他的跨域解决方案 <a class="header-anchor" href="#本地服务代理为什么能解决跨域问题-其他的跨域解决方案" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/7024712515422519303/" target="_blank" rel="noreferrer">Vue 本地开发请求跨域的解决以及服务器代理的原理，永远不要做只用不学的人【一】</a></li></ul><h2 id="indexof-的不足-以及和-includes-的区别" tabindex="-1">indexOf 的不足，以及和 includes 的区别 <a class="header-anchor" href="#indexof-的不足-以及和-includes-的区别" aria-hidden="true">#</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/31712495" target="_blank" rel="noreferrer">indexOf 与 includes 的区别</a></li></ul><h2 id="vue-数据多层级传递-跨越多级组件" tabindex="-1">vue 数据多层级传递(跨越多级组件) <a class="header-anchor" href="#vue-数据多层级传递-跨越多级组件" aria-hidden="true">#</a></h2><h2 id="vite-很快-为什么-大致的原理" tabindex="-1">vite 很快，为什么，大致的原理？ <a class="header-anchor" href="#vite-很快-为什么-大致的原理" aria-hidden="true">#</a></h2><h2 id="vuex-怎么实现将数据注入到每一个组件里" tabindex="-1">vuex 怎么实现将数据注入到每一个组件里 <a class="header-anchor" href="#vuex-怎么实现将数据注入到每一个组件里" aria-hidden="true">#</a></h2><h2 id="axios-如何区分浏览器环境和-node-环境" tabindex="-1">axios 如何区分浏览器环境和 node 环境 <a class="header-anchor" href="#axios-如何区分浏览器环境和-node-环境" aria-hidden="true">#</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/269495606" target="_blank" rel="noreferrer">说说 Axios 中值得学习的核心知识点</a></li></ul><h2 id="网站实现换肤的方式" tabindex="-1">网站实现换肤的方式 <a class="header-anchor" href="#网站实现换肤的方式" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/7063010855167721486" target="_blank" rel="noreferrer">前端 “一键换肤“ 的几种方案</a></li></ul><h2 id="i18n-实现原理" tabindex="-1">i18n 实现原理 <a class="header-anchor" href="#i18n-实现原理" aria-hidden="true">#</a></h2><ul><li><p><a href="https://juejin.cn/post/6844904148794621965" target="_blank" rel="noreferrer">国际化插件-vuei18n 原理</a></p><p>使用类似 vue 的数据劫持和发布订阅</p></li></ul><h2 id="说一下-tkd" tabindex="-1">说一下 TKD <a class="header-anchor" href="#说一下-tkd" aria-hidden="true">#</a></h2><ul><li><a href="https://blog.csdn.net/weixin_33885253/article/details/92729493" target="_blank" rel="noreferrer">网站三要素 tdk 如何正确的设置</a></li></ul><p><code>TKD 即 title、description、keywords</code></p>`,91),e=[o];function t(r,c,F,D,y,i){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
