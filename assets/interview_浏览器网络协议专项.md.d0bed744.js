import{_ as t,c as e,o as l,e as i}from"./app.c0ecb6b0.js";const f=JSON.parse('{"title":"浏览器网络协议专项","description":"","frontmatter":{},"headers":[{"level":2,"title":"一个 tcp 连接能发起几次请求","slug":"一个-tcp-连接能发起几次请求","link":"#一个-tcp-连接能发起几次请求","children":[]},{"level":2,"title":"点击刷新按钮，F5，ctrl + F5，地址栏回车这几种页面刷新方式有什么不同？","slug":"点击刷新按钮-f5-ctrl-f5-地址栏回车这几种页面刷新方式有什么不同","link":"#点击刷新按钮-f5-ctrl-f5-地址栏回车这几种页面刷新方式有什么不同","children":[]}],"relativePath":"interview/浏览器网络协议专项.md","lastUpdated":1677832524000}'),a={name:"interview/浏览器网络协议专项.md"},r=i('<h1 id="浏览器网络协议专项" tabindex="-1">浏览器网络协议专项 <a class="header-anchor" href="#浏览器网络协议专项" aria-hidden="true">#</a></h1><h2 id="一个-tcp-连接能发起几次请求" tabindex="-1">一个 tcp 连接能发起几次请求 <a class="header-anchor" href="#一个-tcp-连接能发起几次请求" aria-hidden="true">#</a></h2><ul><li>http1 <ul><li>默认一次，即一次 http 请求结束后就会断开连接</li><li>可以手动设置 connection： keep-alive, 此时如果服务端和客户端都支持的话就可以发送多个 http 请求</li></ul></li><li>http1.1 <ul><li>支持长连接，没有上限</li></ul></li><li>http2 <ul><li>支持多路复用，不限制请求数量上限</li></ul></li></ul><h2 id="点击刷新按钮-f5-ctrl-f5-地址栏回车这几种页面刷新方式有什么不同" tabindex="-1">点击刷新按钮，F5，ctrl + F5，地址栏回车这几种页面刷新方式有什么不同？ <a class="header-anchor" href="#点击刷新按钮-f5-ctrl-f5-地址栏回车这几种页面刷新方式有什么不同" aria-hidden="true">#</a></h2><ul><li>点击刷新按钮 / F5: 不使用强缓存，服务端可能会返回 304，即任然处于协商缓存有效期内</li><li>ctrl + F5： 不使用前缓存和协商缓存，相当于从来没有请求过改资源</li><li>地址栏回车： 正常流程，先判断有无前缓存 / 协商缓存</li></ul>',5),c=[r];function n(_,d,h,s,o,p){return l(),e("div",null,c)}const m=t(a,[["render",n]]);export{f as __pageData,m as default};
