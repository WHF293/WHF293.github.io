import{_ as e,c as i,o as l,e as t}from"./app.e2717202.js";const S=JSON.parse('{"title":"前端性能指标","description":"","frontmatter":{},"headers":[{"level":2,"title":"performance","slug":"performance","link":"#performance","children":[]}],"relativePath":"work/性能指标.md","lastUpdated":1678780250000}'),a={name:"work/性能指标.md"},r=t('<h1 id="前端性能指标" tabindex="-1">前端性能指标 <a class="header-anchor" href="#前端性能指标" aria-hidden="true">#</a></h1><ul><li><a href="https://zhuanlan.zhihu.com/p/344120636" target="_blank" rel="noreferrer">前端性能指标：白屏和首屏时间的计算</a></li></ul><h2 id="performance" tabindex="-1">performance <a class="header-anchor" href="#performance" aria-hidden="true">#</a></h2><ul><li>performance <ul><li>eventCounts <ul><li>size</li></ul></li><li>memory： 显示此刻内存占用情况 <ul><li>jsHeapSizeLimit number 可使用的内存</li><li>totalJSHeapSize number 内存大小限制</li><li>usedJSHeapSize number JS对象占用的内存数</li><li><code>注意： 如果 usedJSHeapSize &gt; totalJSHeapSize, 那么极有可能是发生了内存泄漏</code></li></ul></li><li>navigate： 显示页面的来源信息 <ul><li>redirectCount number 表示如果有重定向的话，页面通过几次重定向跳转而来，默认为0</li><li>type number 表示页面打开的方式 <ul><li>0 正常进入</li><li>1 通过window.reload()刷新的页面</li><li>2 通过浏览器的前进后退按钮进入的页面</li><li>255 非以上方式进入的页面。</li></ul></li></ul></li><li>timeOrigin： 时间戳 一系列时间点的基准点，精确到万分之一毫秒</li><li>timing： 一系列关键时间点，包含网络、解析等一系列的时间数据。 <ul><li>。。。。太多了</li></ul></li></ul></li></ul><p>一下信息都是 timing 里面的字段计算出来的</p><div class="warning custom-block"><p class="custom-block-title">重要</p><ul><li>重定向耗时：redirectEnd - redirectStart</li><li>DNS查询耗时：domainLookupEnd - domainLookupStart</li><li>TCP链接耗时：connectEnd - connectStart</li><li>HTTP请求耗时：responseEnd - responseStart</li><li>解析dom树耗时：domComplete - domInteractive</li><li>白屏时间：responseStart - navigationStart</li><li>DOM ready时间：domContentLoadedEventEnd - navigationStart</li><li>onload时间：loadEventEnd - navigationStart</li></ul></div>',6),n=[r];function o(d,c,s,u,p,m){return l(),i("div",null,n)}const h=e(a,[["render",o]]);export{S as __pageData,h as default};
