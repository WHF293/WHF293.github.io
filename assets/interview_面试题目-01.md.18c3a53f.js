import{_ as s,c as a,o as l,e as n}from"./app.dbf86312.js";const D=JSON.parse('{"title":"面试题目-1","description":"","frontmatter":{},"headers":[{"level":2,"title":"写出 css 中 position 的属性以及含义","slug":"写出-css-中-position-的属性以及含义","link":"#写出-css-中-position-的属性以及含义","children":[]},{"level":2,"title":"写出清除浮动的方法","slug":"写出清除浮动的方法","link":"#写出清除浮动的方法","children":[]},{"level":2,"title":"写出 css 优先级，介绍 a 标签所含有的伪类","slug":"写出-css-优先级-介绍-a-标签所含有的伪类","link":"#写出-css-优先级-介绍-a-标签所含有的伪类","children":[]},{"level":2,"title":"数组去重(包含 NaN)","slug":"数组去重-包含-nan","link":"#数组去重-包含-nan","children":[]},{"level":2,"title":"简述浏览器 输入地址到页面完整展示过程中会发生什么","slug":"简述浏览器-输入地址到页面完整展示过程中会发生什么","link":"#简述浏览器-输入地址到页面完整展示过程中会发生什么","children":[]},{"level":2,"title":"环境不限， 判断一个变量的类型有哪些方法","slug":"环境不限-判断一个变量的类型有哪些方法","link":"#环境不限-判断一个变量的类型有哪些方法","children":[]},{"level":2,"title":"简述一下对闭包的理解","slug":"简述一下对闭包的理解","link":"#简述一下对闭包的理解","children":[]},{"level":2,"title":"简述一下原型链","slug":"简述一下原型链","link":"#简述一下原型链","children":[]},{"level":2,"title":"promise 的状态， 有无了解其实现原理","slug":"promise-的状态-有无了解其实现原理","link":"#promise-的状态-有无了解其实现原理","children":[]},{"level":2,"title":"JSON.stringify() 方法的其他参数","slug":"json-stringify-方法的其他参数","link":"#json-stringify-方法的其他参数","children":[]},{"level":2,"title":"有了解过 JS 事件循环机制的宏任务/微任务吗","slug":"有了解过-js-事件循环机制的宏任务-微任务吗","link":"#有了解过-js-事件循环机制的宏任务-微任务吗","children":[]},{"level":2,"title":"什么是 BFC","slug":"什么是-bfc","link":"#什么是-bfc","children":[]},{"level":2,"title":"判断数组的方法","slug":"判断数组的方法","link":"#判断数组的方法","children":[]},{"level":2,"title":"说一下 vuex 的大致原理","slug":"说一下-vuex-的大致原理","link":"#说一下-vuex-的大致原理","children":[]},{"level":2,"title":"什么是 vuex，vuex 中，getter 和 setter、muttaion 的区别","slug":"什么是-vuex-vuex-中-getter-和-setter、muttaion-的区别","link":"#什么是-vuex-vuex-中-getter-和-setter、muttaion-的区别","children":[]}],"relativePath":"interview/面试题目-01.md","lastUpdated":1675826282000}'),e={name:"interview/面试题目-01.md"},t=n(`<h1 id="面试题目-1" tabindex="-1">面试题目-1 <a class="header-anchor" href="#面试题目-1" aria-hidden="true">#</a></h1><p><a href="https://juejin.cn/post/6996505288715010061" target="_blank" rel="noreferrer">2021 年-七月-上海-前端-面试总结</a></p><h2 id="写出-css-中-position-的属性以及含义" tabindex="-1">写出 css 中 position 的属性以及含义 <a class="header-anchor" href="#写出-css-中-position-的属性以及含义" aria-hidden="true">#</a></h2><ul><li>static</li><li>relative</li><li>absolute</li><li>fixed</li><li>inherit</li><li>sticky</li></ul><h2 id="写出清除浮动的方法" tabindex="-1">写出清除浮动的方法 <a class="header-anchor" href="#写出清除浮动的方法" aria-hidden="true">#</a></h2><ol><li>使用 clear</li><li>父元素结束标签之前插入清除浮动的块级元素</li><li>利用伪元素（clearfix）</li><li>利用overflow清除浮动</li></ol><h2 id="写出-css-优先级-介绍-a-标签所含有的伪类" tabindex="-1">写出 css 优先级，介绍 a 标签所含有的伪类 <a class="header-anchor" href="#写出-css-优先级-介绍-a-标签所含有的伪类" aria-hidden="true">#</a></h2><blockquote><p>内联 (1000) &gt; ID选择器 (100) &gt; 类/伪类、属性选择器（10） &gt; 元素、伪元素选择器（1）。</p></blockquote><h2 id="数组去重-包含-nan" tabindex="-1">数组去重(包含 NaN) <a class="header-anchor" href="#数组去重-包含-nan" aria-hidden="true">#</a></h2><h2 id="简述浏览器-输入地址到页面完整展示过程中会发生什么" tabindex="-1">简述浏览器 输入地址到页面完整展示过程中会发生什么 <a class="header-anchor" href="#简述浏览器-输入地址到页面完整展示过程中会发生什么" aria-hidden="true">#</a></h2><h2 id="环境不限-判断一个变量的类型有哪些方法" tabindex="-1">环境不限， 判断一个变量的类型有哪些方法 <a class="header-anchor" href="#环境不限-判断一个变量的类型有哪些方法" aria-hidden="true">#</a></h2><ul><li>typeof target</li><li>target instanceof targetType</li><li>Object.prototype.toString.call(target)</li><li>Array.isArray(target)</li></ul><h2 id="简述一下对闭包的理解" tabindex="-1">简述一下对闭包的理解 <a class="header-anchor" href="#简述一下对闭包的理解" aria-hidden="true">#</a></h2><h2 id="简述一下原型链" tabindex="-1">简述一下原型链 <a class="header-anchor" href="#简述一下原型链" aria-hidden="true">#</a></h2><h2 id="promise-的状态-有无了解其实现原理" tabindex="-1">promise 的状态， 有无了解其实现原理 <a class="header-anchor" href="#promise-的状态-有无了解其实现原理" aria-hidden="true">#</a></h2><h2 id="json-stringify-方法的其他参数" tabindex="-1">JSON.stringify() 方法的其他参数 <a class="header-anchor" href="#json-stringify-方法的其他参数" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">whf</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">，</span></span>
<span class="line"><span style="color:#A6ACCD;">    age： </span><span style="color:#F78C6C;">20</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>1 不使用参数</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(obj))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;{ &quot;name&quot; : &quot;whf&quot;, &quot;age&quot; : 20 }&quot;</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>第二个参数是数组</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [name]))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;{ &quot;name&quot; : &quot;whf&quot;}&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [name age]))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;{ &quot;name&quot; : &quot;whf&quot;, &quot;age&quot; : 20 }&quot;</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li>第二个参数是函数</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;{&quot;age&quot; : 20 }&quot;</span></span>
<span class="line"></span></code></pre></div><ol start="4"><li>第三个参数是数字</li></ol><p>如果参数是一个数字，则字符串化中的每个级别都将缩进这个数量的空格字符。</p><blockquote><ul><li>在这里代表空格</li></ul></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// --&quot;name&quot;: &quot;whf&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// --&quot;age&quot;: 20,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// }</span></span>
<span class="line"></span></code></pre></div><ol start="5"><li>第三个参数是字符串</li></ol><p>如果参数是一个数字，则字符串化中的每个级别都将缩进这个数量的空格字符。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">**</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// **&quot;name&quot;: &quot;whf&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// **&quot;age&quot;: 20,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// }</span></span>
<span class="line"></span></code></pre></div><h2 id="有了解过-js-事件循环机制的宏任务-微任务吗" tabindex="-1">有了解过 JS 事件循环机制的宏任务/微任务吗 <a class="header-anchor" href="#有了解过-js-事件循环机制的宏任务-微任务吗" aria-hidden="true">#</a></h2><h2 id="什么是-bfc" tabindex="-1">什么是 BFC <a class="header-anchor" href="#什么是-bfc" aria-hidden="true">#</a></h2><h2 id="判断数组的方法" tabindex="-1">判断数组的方法 <a class="header-anchor" href="#判断数组的方法" aria-hidden="true">#</a></h2><ul><li>Object.prototype.toString.call(target) === &#39;[object array]&#39;</li><li>Array.isArray(target)</li></ul><h2 id="说一下-vuex-的大致原理" tabindex="-1">说一下 vuex 的大致原理 <a class="header-anchor" href="#说一下-vuex-的大致原理" aria-hidden="true">#</a></h2><h2 id="什么是-vuex-vuex-中-getter-和-setter、muttaion-的区别" tabindex="-1">什么是 vuex，vuex 中，getter 和 setter、muttaion 的区别 <a class="header-anchor" href="#什么是-vuex-vuex-中-getter-和-setter、muttaion-的区别" aria-hidden="true">#</a></h2>`,36),o=[t];function p(i,r,c,y,h,d){return l(),a("div",null,o)}const F=s(e,[["render",p]]);export{D as __pageData,F as default};
