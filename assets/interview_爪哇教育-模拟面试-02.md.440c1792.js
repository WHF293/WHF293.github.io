import{_ as e,c as l,o as a,e as i}from"./app.c0ecb6b0.js";const b=JSON.parse('{"title":"爪哇教育大厂模拟面试 - 2022-09-19","description":"","frontmatter":{},"headers":[{"level":2,"title":"输入 url 到 页面渲染的过程","slug":"输入-url-到-页面渲染的过程","link":"#输入-url-到-页面渲染的过程","children":[]},{"level":2,"title":"说一下 http2","slug":"说一下-http2","link":"#说一下-http2","children":[]},{"level":2,"title":"项目中的缓存","slug":"项目中的缓存","link":"#项目中的缓存","children":[]},{"level":2,"title":"有使用过 SSR 吗","slug":"有使用过-ssr-吗","link":"#有使用过-ssr-吗","children":[]},{"level":2,"title":"有使用过 web worker 吗？","slug":"有使用过-web-worker-吗","link":"#有使用过-web-worker-吗","children":[]},{"level":2,"title":"大文件上传用到那些技术点？","slug":"大文件上传用到那些技术点","link":"#大文件上传用到那些技术点","children":[]},{"level":2,"title":"webpack","slug":"webpack","link":"#webpack","children":[{"level":3,"title":"有没有自己封装过一些 plugin","slug":"有没有自己封装过一些-plugin","link":"#有没有自己封装过一些-plugin","children":[]},{"level":3,"title":"webpack 怎么实现 tree shaking","slug":"webpack-怎么实现-tree-shaking","link":"#webpack-怎么实现-tree-shaking","children":[]},{"level":3,"title":"webpack 核心流程","slug":"webpack-核心流程","link":"#webpack-核心流程","children":[]}]},{"level":2,"title":"说下 react 和 vue 的区别","slug":"说下-react-和-vue-的区别","link":"#说下-react-和-vue-的区别","children":[]},{"level":2,"title":"项目版本稳定性怎么确定","slug":"项目版本稳定性怎么确定","link":"#项目版本稳定性怎么确定","children":[]}],"relativePath":"interview/爪哇教育-模拟面试-02.md","lastUpdated":1677225322000}'),s={name:"interview/爪哇教育-模拟面试-02.md"},n=i(`<h1 id="爪哇教育大厂模拟面试-2022-09-19" tabindex="-1">爪哇教育大厂模拟面试 - 2022-09-19 <a class="header-anchor" href="#爪哇教育大厂模拟面试-2022-09-19" aria-hidden="true">#</a></h1><h2 id="输入-url-到-页面渲染的过程" tabindex="-1">输入 url 到 页面渲染的过程 <a class="header-anchor" href="#输入-url-到-页面渲染的过程" aria-hidden="true">#</a></h2><p>查询本地是否有缓存 --无--&gt; dns 解析 --&gt; 拿到对于资源 --&gt; 浏览器渲染</p><ul><li>缓存 <ul><li>强缓存、协商缓存的区别？</li><li>项目设计的时候怎么考虑这两种缓存，该使用哪一种呢？</li><li>node 端和浏览器端该怎么考虑这两种缓存的使用？</li></ul></li></ul><p>在这整个流程中，有哪些地方可以做性能优化？</p><ul><li><p>DNS： 缓存（dns-preFetch）</p></li><li><p>网络资源压缩</p></li><li><p>Dom tree 和 cssOM</p><ul><li>生产这两个树的过程中怎么进行优化（重排重绘，即开发过程要注意哪些点）？</li></ul></li></ul><h2 id="说一下-http2" tabindex="-1">说一下 http2 <a class="header-anchor" href="#说一下-http2" aria-hidden="true">#</a></h2><p>为什么要使用 http2， 有哪些优点？</p><ul><li>多路复用</li><li>文件分割，减少大文件堵塞</li></ul><h2 id="项目中的缓存" tabindex="-1">项目中的缓存 <a class="header-anchor" href="#项目中的缓存" aria-hidden="true">#</a></h2><p>除了浏览器的缓存，图片的资源的缓存外，还有用到其他的缓存吗？</p><ul><li>多个请求合并 --&gt; 埋点合并上报</li></ul><h2 id="有使用过-ssr-吗" tabindex="-1">有使用过 SSR 吗 <a class="header-anchor" href="#有使用过-ssr-吗" aria-hidden="true">#</a></h2><ul><li>为什么使用 SSR，目的或者说优点是什么？</li></ul><h2 id="有使用过-web-worker-吗" tabindex="-1">有使用过 web worker 吗？ <a class="header-anchor" href="#有使用过-web-worker-吗" aria-hidden="true">#</a></h2><h2 id="大文件上传用到那些技术点" tabindex="-1">大文件上传用到那些技术点？ <a class="header-anchor" href="#大文件上传用到那些技术点" aria-hidden="true">#</a></h2><ul><li>web worker</li><li>hash</li></ul><p>断点续传时 http2 有那些注意点？（断点续传时，code 码有什么影响）</p><h2 id="webpack" tabindex="-1">webpack <a class="header-anchor" href="#webpack" aria-hidden="true">#</a></h2><h3 id="有没有自己封装过一些-plugin" tabindex="-1">有没有自己封装过一些 plugin <a class="header-anchor" href="#有没有自己封装过一些-plugin" aria-hidden="true">#</a></h3><h3 id="webpack-怎么实现-tree-shaking" tabindex="-1">webpack 怎么实现 tree shaking <a class="header-anchor" href="#webpack-怎么实现-tree-shaking" aria-hidden="true">#</a></h3><p><a href="https://zhuanlan.zhihu.com/p/403901557#:~:text=1.1%20%E5%9C%A8%20Webpack%20%E4%B8%AD%E5%90%AF%E5%8A%A8%20Tree%20Shaking%201%20%E4%BD%BF%E7%94%A8,production%20%E9%85%8D%E7%BD%AE%20optimization.minimize%20%3D%20true%20%E6%8F%90%E4%BE%9B%20optimization.minimizer%20%E6%95%B0%E7%BB%84" target="_blank" rel="noreferrer">Webpack 原理系列九：Tree-Shaking 实现原理</a></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// webpack.config.js</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">optimization</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">usedExports</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 开启 tree-shaking</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>Webpack 中，Tree-shaking 的实现（前提：使用 esm 方式的模块导入）：</p><ul><li>一是先<code>「标记」</code>出模块导出值中哪些没有被用过</li><li>二是使用 <code>Terser</code> 删掉这些没被用到的导出语句。</li></ul><p>标记过程大致可划分为三个步骤：</p><ol><li>Make 阶段，收集模块导出变量并记录到模块依赖关系图 ModuleGraph 变量中</li><li>Seal 阶段，遍历 ModuleGraph 标记模块导出变量有没有被使用</li><li>生成产物时，若变量没有被其它模块使用则删除对应的导出语句</li></ol><h3 id="webpack-核心流程" tabindex="-1">webpack 核心流程 <a class="header-anchor" href="#webpack-核心流程" aria-hidden="true">#</a></h3><p><a href="https://mp.weixin.qq.com/s/SbJNbSVzSPSKBe2YStn2Zw" target="_blank" rel="noreferrer">一文吃透 Webpack 核心原理</a></p><blockquote><p>webpack 打包的过程就是将各种类型的资源，包括图片、css、js等，转译、组合、拼接、生成 JS 格式的 bundler 文件, 这个过程核心完成了 <code>内容转换 + 资源合并</code> 两种功能</p></blockquote><h2 id="说下-react-和-vue-的区别" tabindex="-1">说下 react 和 vue 的区别 <a class="header-anchor" href="#说下-react-和-vue-的区别" aria-hidden="true">#</a></h2><ul><li>说一下 react 18 和 vue3 的 Suspence 组件</li><li>vue3 的 diff 算法和 vue2 的有什么区别</li><li>react diff 算法的更新</li><li>react 的 fiber 有了解吗 --&gt; 链表</li><li>fiber 为什么不和 vue3 一样使用双端比对的算法 <ul><li>fiber 链表</li><li>vue 数组</li></ul></li><li>useMemo 和 useCallback 区别？ <ul><li>useMemo 缓存值</li><li>useCallback 缓存函数</li></ul></li><li>vue3 组合式 API <ul><li>vue2 到 vue3 为什么要从选项式 api 缓存组合式 api，有什么好处？</li></ul></li><li>vue2 全局 api <ul><li>$nextTick 的实现</li></ul></li></ul><h2 id="项目版本稳定性怎么确定" tabindex="-1">项目版本稳定性怎么确定 <a class="header-anchor" href="#项目版本稳定性怎么确定" aria-hidden="true">#</a></h2><ul><li>package-lock.json</li></ul>`,34),r=[n];function t(p,c,o,h,d,u){return a(),l("div",null,r)}const g=e(s,[["render",t]]);export{b as __pageData,g as default};
