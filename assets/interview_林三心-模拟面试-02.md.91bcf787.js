import{_ as e,c as s,o as l,e as a}from"./app.7a286363.js";const D=JSON.parse('{"title":"林三心本站模拟面试","description":"","frontmatter":{},"headers":[{"level":2,"title":"html5 语义化的好处","slug":"html5-语义化的好处","link":"#html5-语义化的好处","children":[]},{"level":2,"title":"css3 毛玻璃效果的实现","slug":"css3-毛玻璃效果的实现","link":"#css3-毛玻璃效果的实现","children":[]},{"level":2,"title":"css2 的 :first-child 和 css3 的 :first-of-type 的区别？","slug":"css2-的-first-child-和-css3-的-first-of-type-的区别","link":"#css2-的-first-child-和-css3-的-first-of-type-的区别","children":[]},{"level":2,"title":"https 比 http 安全在哪里","slug":"https-比-http-安全在哪里","link":"#https-比-http-安全在哪里","children":[]},{"level":2,"title":"快速排序和冒泡排序实现，以及相应的时间复杂度","slug":"快速排序和冒泡排序实现-以及相应的时间复杂度","link":"#快速排序和冒泡排序实现-以及相应的时间复杂度","children":[]},{"level":2,"title":"vue 中 的 v-model 可以用什么替代","slug":"vue-中-的-v-model-可以用什么替代","link":"#vue-中-的-v-model-可以用什么替代","children":[]},{"level":2,"title":"vue 销毁时，所以自定义事件和原生时间都会跟着解绑吗","slug":"vue-销毁时-所以自定义事件和原生时间都会跟着解绑吗","link":"#vue-销毁时-所以自定义事件和原生时间都会跟着解绑吗","children":[]},{"level":2,"title":"vue3 怎么解决 vue2 的响应式缺陷的","slug":"vue3-怎么解决-vue2-的响应式缺陷的","link":"#vue3-怎么解决-vue2-的响应式缺陷的","children":[]},{"level":2,"title":"nextTick 是什么任务？为什么优先是微任务","slug":"nexttick-是什么任务-为什么优先是微任务","link":"#nexttick-是什么任务-为什么优先是微任务","children":[]},{"level":2,"title":"一个超长的字符串能存在栈内存里面吗","slug":"一个超长的字符串能存在栈内存里面吗","link":"#一个超长的字符串能存在栈内存里面吗","children":[]},{"level":2,"title":"赋值、浅拷贝、深拷贝的区别","slug":"赋值、浅拷贝、深拷贝的区别","link":"#赋值、浅拷贝、深拷贝的区别","children":[]},{"level":2,"title":"webpack style-loader 和 css-loader 区别","slug":"webpack-style-loader-和-css-loader-区别","link":"#webpack-style-loader-和-css-loader-区别","children":[]},{"level":2,"title":"webpack 怎么配置 ts 打包","slug":"webpack-怎么配置-ts-打包","link":"#webpack-怎么配置-ts-打包","children":[]},{"level":2,"title":"webpack 3 中 hash 值配置的区别","slug":"webpack-3-中-hash-值配置的区别","link":"#webpack-3-中-hash-值配置的区别","children":[]},{"level":2,"title":"强缓存和协商缓存的区别","slug":"强缓存和协商缓存的区别","link":"#强缓存和协商缓存的区别","children":[]},{"level":2,"title":"如何计算白屏时间","slug":"如何计算白屏时间","link":"#如何计算白屏时间","children":[]},{"level":2,"title":"本地服务代理为什么能解决跨域问题？其他的跨域解决方案","slug":"本地服务代理为什么能解决跨域问题-其他的跨域解决方案","link":"#本地服务代理为什么能解决跨域问题-其他的跨域解决方案","children":[]},{"level":2,"title":"indexOf 的不足，以及和 includes 的区别","slug":"indexof-的不足-以及和-includes-的区别","link":"#indexof-的不足-以及和-includes-的区别","children":[]},{"level":2,"title":"vue 数据多层级传递(跨越多级组件)","slug":"vue-数据多层级传递-跨越多级组件","link":"#vue-数据多层级传递-跨越多级组件","children":[]},{"level":2,"title":"vite 很快，为什么，大致的原理？","slug":"vite-很快-为什么-大致的原理","link":"#vite-很快-为什么-大致的原理","children":[]},{"level":2,"title":"vuex 怎么实现将数据注入到每一个组件里","slug":"vuex-怎么实现将数据注入到每一个组件里","link":"#vuex-怎么实现将数据注入到每一个组件里","children":[]},{"level":2,"title":"axios 如何区分浏览器环境和 node 环境","slug":"axios-如何区分浏览器环境和-node-环境","link":"#axios-如何区分浏览器环境和-node-环境","children":[]},{"level":2,"title":"i18n 实现原理","slug":"i18n-实现原理","link":"#i18n-实现原理","children":[]},{"level":2,"title":"说一下 TKD","slug":"说一下-tkd","link":"#说一下-tkd","children":[]}],"relativePath":"interview/林三心-模拟面试-02.md","lastUpdated":1677491563000}'),n={name:"interview/林三心-模拟面试-02.md"},t=a(`<h1 id="林三心本站模拟面试" tabindex="-1">林三心本站模拟面试 <a class="header-anchor" href="#林三心本站模拟面试" aria-hidden="true">#</a></h1><h2 id="html5-语义化的好处" tabindex="-1">html5 语义化的好处 <a class="header-anchor" href="#html5-语义化的好处" aria-hidden="true">#</a></h2><h2 id="css3-毛玻璃效果的实现" tabindex="-1">css3 毛玻璃效果的实现 <a class="header-anchor" href="#css3-毛玻璃效果的实现" aria-hidden="true">#</a></h2><h2 id="css2-的-first-child-和-css3-的-first-of-type-的区别" tabindex="-1">css2 的 :first-child 和 css3 的 :first-of-type 的区别？ <a class="header-anchor" href="#css2-的-first-child-和-css3-的-first-of-type-的区别" aria-hidden="true">#</a></h2><ul><li><p><a href="https://www.cnblogs.com/2050/p/3569509.html" target="_blank" rel="noreferrer">css 选择器中:first-child 与:first-of-type 的区别</a></p></li><li><p>区别:</p><ul><li><code>:first-child</code>, 匹配元素是否是其父元素的第一个子元素</li><li><code>:first-of-type</code>， 匹配该父元素下，该元素在同类型元素是否是第一个元素</li></ul></li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">div</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">p</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-child</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">/* 匹配成功 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">h1</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-child</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">/* 匹配失败 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">p</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-of-type</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">/* 匹配成功 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">h1</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-of-type</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">/* 匹配成功 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>【备注】： 同样类型的选择器 <code>:last-child 和 :last-of-type、:nth-child(n) 和 :nth-of-type(n)</code> 也可以这样去理解。</p><h2 id="https-比-http-安全在哪里" tabindex="-1">https 比 http 安全在哪里 <a class="header-anchor" href="#https-比-http-安全在哪里" aria-hidden="true">#</a></h2><ul><li><p><a href="https://juejin.cn/post/6844903830987997197" target="_blank" rel="noreferrer">为什么 HTTPS 比 HTTP 更安全？</a></p></li><li><p>概念</p><ul><li>http： 超文本传输协议，是互联网上应用最为广泛的一种网络协议</li><li>https: 是以安全为目标的 http 通道，即 http 下加入 ssl 层</li></ul><blockquote><p>简单来说 https 协议是由 http 和 ssl 协议构建的可进行加密传输和身份认证的网络协议</p></blockquote></li></ul><h2 id="快速排序和冒泡排序实现-以及相应的时间复杂度" tabindex="-1">快速排序和冒泡排序实现，以及相应的时间复杂度 <a class="header-anchor" href="#快速排序和冒泡排序实现-以及相应的时间复杂度" aria-hidden="true">#</a></h2><h2 id="vue-中-的-v-model-可以用什么替代" tabindex="-1">vue 中 的 v-model 可以用什么替代 <a class="header-anchor" href="#vue-中-的-v-model-可以用什么替代" aria-hidden="true">#</a></h2><ul><li><a href="https://blog.csdn.net/weixin_45389051/article/details/104704627" target="_blank" rel="noreferrer">代码解释 v-model 可以用两个指令结合代替 </a></li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@input</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message = $event.target.value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="vue-销毁时-所以自定义事件和原生时间都会跟着解绑吗" tabindex="-1">vue 销毁时，所以自定义事件和原生时间都会跟着解绑吗 <a class="header-anchor" href="#vue-销毁时-所以自定义事件和原生时间都会跟着解绑吗" aria-hidden="true">#</a></h2><ul><li><a href="https://segmentfault.com/q/1010000016613680/" target="_blank" rel="noreferrer">vue 组件的事件是否有必要在组件销毁前进行移除？</a></li></ul><h2 id="vue3-怎么解决-vue2-的响应式缺陷的" tabindex="-1">vue3 怎么解决 vue2 的响应式缺陷的 <a class="header-anchor" href="#vue3-怎么解决-vue2-的响应式缺陷的" aria-hidden="true">#</a></h2><ul><li><a href="https://blog.csdn.net/weixin_54182512/article/details/121349580" target="_blank" rel="noreferrer">Vue3 解决了 vue2 的什么问题</a></li></ul><h2 id="nexttick-是什么任务-为什么优先是微任务" tabindex="-1">nextTick 是什么任务？为什么优先是微任务 <a class="header-anchor" href="#nexttick-是什么任务-为什么优先是微任务" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/6875492931726376974" target="_blank" rel="noreferrer">Vue 的 nextTick 具体是微任务还是宏任务?</a></li></ul><h2 id="一个超长的字符串能存在栈内存里面吗" tabindex="-1">一个超长的字符串能存在栈内存里面吗 <a class="header-anchor" href="#一个超长的字符串能存在栈内存里面吗" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/7054195221239693342" target="_blank" rel="noreferrer">栈内存只有 984KiB，如果一个字符串超级长，能存的下吗</a></li></ul><h2 id="赋值、浅拷贝、深拷贝的区别" tabindex="-1">赋值、浅拷贝、深拷贝的区别 <a class="header-anchor" href="#赋值、浅拷贝、深拷贝的区别" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/6844904100061003783" target="_blank" rel="noreferrer">赋值、浅拷贝、深拷贝区别</a></li></ul><h2 id="webpack-style-loader-和-css-loader-区别" tabindex="-1">webpack style-loader 和 css-loader 区别 <a class="header-anchor" href="#webpack-style-loader-和-css-loader-区别" aria-hidden="true">#</a></h2><h2 id="webpack-怎么配置-ts-打包" tabindex="-1">webpack 怎么配置 ts 打包 <a class="header-anchor" href="#webpack-怎么配置-ts-打包" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/7028532437458092068" target="_blank" rel="noreferrer">Webpack5 系列（九）：TS 打包配置</a></li></ul><h2 id="webpack-3-中-hash-值配置的区别" tabindex="-1">webpack 3 中 hash 值配置的区别 <a class="header-anchor" href="#webpack-3-中-hash-值配置的区别" aria-hidden="true">#</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/416294253" target="_blank" rel="noreferrer">webpack 中 hash，chunkhash，contenthash 有什么区别</a></li></ul><h2 id="强缓存和协商缓存的区别" tabindex="-1">强缓存和协商缓存的区别 <a class="header-anchor" href="#强缓存和协商缓存的区别" aria-hidden="true">#</a></h2><ul><li><a href="https://www.jianshu.com/p/1a1536ab01f1" target="_blank" rel="noreferrer">强缓存和协商缓存的区别</a></li></ul><h2 id="如何计算白屏时间" tabindex="-1">如何计算白屏时间 <a class="header-anchor" href="#如何计算白屏时间" aria-hidden="true">#</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/344120636" target="_blank" rel="noreferrer">前端性能指标：白屏和首屏时间的计算</a></li></ul><h2 id="本地服务代理为什么能解决跨域问题-其他的跨域解决方案" tabindex="-1">本地服务代理为什么能解决跨域问题？其他的跨域解决方案 <a class="header-anchor" href="#本地服务代理为什么能解决跨域问题-其他的跨域解决方案" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/7024712515422519303/" target="_blank" rel="noreferrer">Vue 本地开发请求跨域的解决以及服务器代理的原理，永远不要做只用不学的人【一】</a></li></ul><h2 id="indexof-的不足-以及和-includes-的区别" tabindex="-1">indexOf 的不足，以及和 includes 的区别 <a class="header-anchor" href="#indexof-的不足-以及和-includes-的区别" aria-hidden="true">#</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/31712495" target="_blank" rel="noreferrer">indexOf 与 includes 的区别</a></li></ul><h2 id="vue-数据多层级传递-跨越多级组件" tabindex="-1">vue 数据多层级传递(跨越多级组件) <a class="header-anchor" href="#vue-数据多层级传递-跨越多级组件" aria-hidden="true">#</a></h2><h2 id="vite-很快-为什么-大致的原理" tabindex="-1">vite 很快，为什么，大致的原理？ <a class="header-anchor" href="#vite-很快-为什么-大致的原理" aria-hidden="true">#</a></h2><h2 id="vuex-怎么实现将数据注入到每一个组件里" tabindex="-1">vuex 怎么实现将数据注入到每一个组件里 <a class="header-anchor" href="#vuex-怎么实现将数据注入到每一个组件里" aria-hidden="true">#</a></h2><h2 id="axios-如何区分浏览器环境和-node-环境" tabindex="-1">axios 如何区分浏览器环境和 node 环境 <a class="header-anchor" href="#axios-如何区分浏览器环境和-node-环境" aria-hidden="true">#</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/269495606" target="_blank" rel="noreferrer">说说 Axios 中值得学习的核心知识点</a></li></ul><h2 id="i18n-实现原理" tabindex="-1">i18n 实现原理 <a class="header-anchor" href="#i18n-实现原理" aria-hidden="true">#</a></h2><ul><li><p><a href="https://juejin.cn/post/6844904148794621965" target="_blank" rel="noreferrer">国际化插件-vuei18n 原理</a></p><p>使用类似 vue 的数据劫持和发布订阅</p></li></ul><h2 id="说一下-tkd" tabindex="-1">说一下 TKD <a class="header-anchor" href="#说一下-tkd" aria-hidden="true">#</a></h2><ul><li><a href="https://blog.csdn.net/weixin_33885253/article/details/92729493" target="_blank" rel="noreferrer">网站三要素 tdk 如何正确的设置</a></li></ul><p><code>TKD 即 title、description、keywords</code></p>`,46),r=[t];function p(o,i,c,h,d,u){return l(),s("div",null,r)}const F=e(n,[["render",p]]);export{D as __pageData,F as default};
